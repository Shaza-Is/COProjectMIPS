Test program #1 - adding and subtracting

//====== Assembly Code ======//
//initializing data

addi $s0,$z,4  //$s0 = 4
addi $s1,$s0,6  //$s1 = 10
addi $s2,$z,16  //$s2 = 16
addi $s3,$z,68  //$s3 = 68
addi $s4,$z,40  //$s4 = 40

//adding and subtracting

add $s0,$s3,$s4  //$s0 = (40+68) = 108
add $s4,$s1,$s3  //$s4 = (68+10) = 78
addi $s1,$s2,-10  //$s1 = (16-10) = 6
slt $s3,$s4,$s1  //$s3 = 1
slt $s2,$s3,$s0  //$s2 = 0

//storing data into memory

sw $s0,4($s2) //$s0 in loc 4 in memory (0+4) .. loc 4 contains 108
sw $s1,8($s2) //$s1 in loc 8 in memory (0+8) .. loc 8 contains 6
sw $s2,4($s0) //$s2 in loc 112 in memory (108+4) .. loc 112 contains 0
lw $s5,8($s2) //$s5 = 6 
addi $s5,$s5,2 //$s5 = 8
sw $s3,12($s5) //$s3 in loc 20 in memory (12+8) .. loc 20 contains 1
sw $s4,20($s5) //$s4 in loc 28 in memory (20+8) .. loc 28 contains 78

//====== Machine Code ======//

//initializing data

0010 0000 0001 0000 0000 0000 0000 0100
0010 0010 0001 0001 0000 0000 0000 0110
0010 0000 0001 0010 0000 0000 0001 0000
0010 0000 0001 0011 0000 0000 0100 0100
0010 0000 0001 0100 0000 0000 0010 1000

//adding and subtracting

0000 0010 0111 0100 1000 0000 0010 0000
0000 0010 0011 0011 1010 0000 0010 0000
0010 0010 0101 0001 1111 1111 1111 0110
0000 0010 1001 0001 1001 1000 0010 1010
0000 0010 0111 0000 1001 0000 0010 1010

//storing data into memory

1010 1110 0101 0000 0000 0000 0000 0100
1010 1110 0101 0001 0000 0000 0000 1000
1001 1110 0001 0010 0000 0000 0000 0100
1000 1110 0101 0101 0000 0000 0000 1000
0010 0010 1011 0101 0000 0000 0000 0010
1010 1110 1011 0010 0000 0000 0000 1100
1010 1110 1011 0100 0000 0000 0001 0100